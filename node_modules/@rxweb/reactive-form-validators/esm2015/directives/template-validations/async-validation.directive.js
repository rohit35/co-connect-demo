var AsyncValidationDirective_1;
import * as tslib_1 from "tslib";
import { Input, Directive, forwardRef } from '@angular/core';
import { NG_ASYNC_VALIDATORS } from '@angular/forms';
let AsyncValidationDirective = AsyncValidationDirective_1 = class AsyncValidationDirective {
    validate(control) {
        if (this.async)
            return this.async(control);
        return new Promise((resolve, reject) => { resolve(null); });
    }
};
tslib_1.__decorate([
    Input()
], AsyncValidationDirective.prototype, "async", void 0);
AsyncValidationDirective = AsyncValidationDirective_1 = tslib_1.__decorate([
    Directive({
        selector: '[ngModel],[formControlName],[formControl]',
        providers: [{
                provide: NG_ASYNC_VALIDATORS,
                useExisting: forwardRef(() => AsyncValidationDirective_1),
                multi: true
            }]
    })
], AsyncValidationDirective);
export { AsyncValidationDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXN5bmMtdmFsaWRhdGlvbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Acnh3ZWIvcmVhY3RpdmUtZm9ybS12YWxpZGF0b3JzLyIsInNvdXJjZXMiOlsiZGlyZWN0aXZlcy90ZW1wbGF0ZS12YWxpZGF0aW9ucy9hc3luYy12YWxpZGF0aW9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBYyxNQUFNLGVBQWUsQ0FBQztBQUN6RSxPQUFPLEVBQXFDLG1CQUFtQixFQUFvQyxNQUFNLGdCQUFnQixDQUFDO0FBUzFILElBQWEsd0JBQXdCLGdDQUFyQyxNQUFhLHdCQUF3QjtJQUdqQyxRQUFRLENBQUMsT0FBd0I7UUFDN0IsSUFBSSxJQUFJLENBQUMsS0FBSztZQUNWLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMvQixPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDL0QsQ0FBQztDQUNKLENBQUE7QUFQWTtJQUFSLEtBQUssRUFBRTt1REFBWTtBQURYLHdCQUF3QjtJQVJwQyxTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsMkNBQTJDO1FBQ3JELFNBQVMsRUFBRSxDQUFDO2dCQUNSLE9BQU8sRUFBRSxtQkFBbUI7Z0JBQzVCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsMEJBQXdCLENBQUM7Z0JBQ3ZELEtBQUssRUFBRSxJQUFJO2FBQ2QsQ0FBQztLQUNMLENBQUM7R0FDVyx3QkFBd0IsQ0FRcEM7U0FSWSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgRGlyZWN0aXZlLCBmb3J3YXJkUmVmLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFZhbGlkYXRpb25FcnJvcnMsIEFic3RyYWN0Q29udHJvbCwgTkdfQVNZTkNfVkFMSURBVE9SUywgQXN5bmNWYWxpZGF0b3IsIEFzeW5jVmFsaWRhdG9yRm4gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdbbmdNb2RlbF0sW2Zvcm1Db250cm9sTmFtZV0sW2Zvcm1Db250cm9sXScsXHJcbiAgICBwcm92aWRlcnM6IFt7XHJcbiAgICAgICAgcHJvdmlkZTogTkdfQVNZTkNfVkFMSURBVE9SUyxcclxuICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBBc3luY1ZhbGlkYXRpb25EaXJlY3RpdmUpLFxyXG4gICAgICAgIG11bHRpOiB0cnVlXHJcbiAgICB9XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXN5bmNWYWxpZGF0aW9uRGlyZWN0aXZlIGltcGxlbWVudHMgQXN5bmNWYWxpZGF0b3Ige1xyXG4gICAgQElucHV0KCkgYXN5bmM6IGFueTtcclxuXHJcbiAgICB2YWxpZGF0ZShjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiBQcm9taXNlPFZhbGlkYXRpb25FcnJvcnMgfCBudWxsPiB7XHJcbiAgICAgICAgaWYgKHRoaXMuYXN5bmMpXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFzeW5jKGNvbnRyb2wpO1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7IHJlc29sdmUobnVsbCk7IH0pXHJcbiAgICB9XHJcbn1cclxuIl19