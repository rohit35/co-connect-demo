import * as tslib_1 from "tslib";
import { EmbeddedViewRef, Directive, Input, ViewContainerRef, OnDestroy } from '@angular/core';
var ControlHostDirective = /** @class */ (function () {
    function ControlHostDirective(viewContainerRef) {
        this.viewContainerRef = viewContainerRef;
    }
    Object.defineProperty(ControlHostDirective.prototype, "portal", {
        set: function (context) {
            if (context.templateRef) {
                if (this.view) {
                    this.view.destroy();
                    this.view = undefined;
                }
                this.view = this.viewContainerRef.createEmbeddedView(context.templateRef, context);
            }
        },
        enumerable: true,
        configurable: true
    });
    ControlHostDirective.prototype.ngOnDestroy = function () {
        if (this.view)
            this.view.destroy();
        if (this.viewContainerRef)
            this.viewContainerRef.clear();
    };
    ControlHostDirective.ctorParameters = function () { return [
        { type: ViewContainerRef }
    ]; };
    tslib_1.__decorate([
        Input('controlHost')
    ], ControlHostDirective.prototype, "portal", null);
    ControlHostDirective = tslib_1.__decorate([
        Directive({
            selector: '[controlHost]'
        })
    ], ControlHostDirective);
    return ControlHostDirective;
}());
export { ControlHostDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC1ob3N0LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9yZWFjdGl2ZS1mb3JtLXZhbGlkYXRvcnMvIiwic291cmNlcyI6WyJkaXJlY3RpdmVzL2NvbnRyb2wtaG9zdC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxlQUFlLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFLN0Y7SUFHSSw4QkFBbUIsZ0JBQWtDO1FBQWxDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7SUFBSSxDQUFDO0lBRXBDLHNCQUFJLHdDQUFNO2FBQVYsVUFBVyxPQUFZO1lBQ3pDLElBQUksT0FBTyxDQUFDLFdBQVcsRUFBRTtnQkFDckIsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO29CQUNYLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7b0JBQ3BCLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO2lCQUN6QjtnQkFDRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxDQUFDO2FBQ3RGO1FBQ0wsQ0FBQzs7O09BQUE7SUFFRCwwQ0FBVyxHQUFYO1FBQ0ksSUFBRyxJQUFJLENBQUMsSUFBSTtZQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdEIsSUFBSSxJQUFJLENBQUMsZ0JBQWdCO1lBQ3JCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0QyxDQUFDOztnQkFqQm9DLGdCQUFnQjs7SUFFL0I7UUFBckIsS0FBSyxDQUFDLGFBQWEsQ0FBQztzREFRcEI7SUFiUSxvQkFBb0I7UUFIaEMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLGVBQWU7U0FDNUIsQ0FBQztPQUNXLG9CQUFvQixDQXFCaEM7SUFBRCwyQkFBQztDQUFBLEFBckJELElBcUJDO1NBckJZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RW1iZWRkZWRWaWV3UmVmLCBEaXJlY3RpdmUsIElucHV0LCBWaWV3Q29udGFpbmVyUmVmLCBPbkRlc3Ryb3l9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgICBzZWxlY3RvcjogJ1tjb250cm9sSG9zdF0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb250cm9sSG9zdERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XHJcbiAgICB2aWV3OiBFbWJlZGRlZFZpZXdSZWY8YW55PjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZikgeyB9XHJcblxyXG4gICAgQElucHV0KCdjb250cm9sSG9zdCcpIHNldCBwb3J0YWwoY29udGV4dDogYW55KSB7XHJcbiAgICAgICAgaWYgKGNvbnRleHQudGVtcGxhdGVSZWYpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMudmlldykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy52aWV3LmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudmlldyA9IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnZpZXcgPSB0aGlzLnZpZXdDb250YWluZXJSZWYuY3JlYXRlRW1iZWRkZWRWaWV3KGNvbnRleHQudGVtcGxhdGVSZWYsIGNvbnRleHQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBuZ09uRGVzdHJveSgpIHtcclxuICAgICAgICBpZih0aGlzLnZpZXcpXHJcbiAgICAgICAgICB0aGlzLnZpZXcuZGVzdHJveSgpO1xyXG4gICAgICAgIGlmICh0aGlzLnZpZXdDb250YWluZXJSZWYpXHJcbiAgICAgICAgICAgIHRoaXMudmlld0NvbnRhaW5lclJlZi5jbGVhcigpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==