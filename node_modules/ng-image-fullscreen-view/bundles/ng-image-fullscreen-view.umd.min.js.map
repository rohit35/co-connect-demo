{"version":3,"sources":["ng://ng-image-fullscreen-view/lib/ng-image-fullscreen-view.service.ts","ng://ng-image-fullscreen-view/lib/ng-image-fullscreen-view.component.ts","ng://ng-image-fullscreen-view/lib/slider-custom-image/slider-custom-image.component.ts","ng://ng-image-fullscreen-view/lib/ng-image-fullscreen-view.module.ts"],"names":["NgImageFullscreenViewService","prototype","isBase64","str","test","base64FileExtension","substring","length","indexOf","Injectable","args","providedIn","NgImageFullscreenViewComponent","cdRef","sanitizer","elRef","imageFullscreenViewService","document","this","YOUTUBE","IMAGE","VIDEO","INVALID","totalImages","nextImageIndex","popupWidth","marginLeft","imageFullscreenView","lightboxPrevDisable","lightboxNextDisable","showLoading","effectStyle","speed","title","currentImageIndex","images","videoAutoPlay","direction","paginationShow","infinite","arrowKeyMove","showVideoControls","close","EventEmitter","prevImage","nextImage","Object","defineProperty","index","undefined","nextPrevDisable","visiableFlag","nativeElement","ownerDocument","body","style","overflow","setPopupSliderWidth","data","onResize","event","handleKeyboardEvent","key","toLowerCase","nextImageLightbox","prevImageLightbox","closeLightbox","ngOnInit","ngAfterViewInit","ngOnDestroy","resetState","_this","window","innerWidth","getImageData","setTimeout","emit","applyButtonDisableCondition","iframeI","getElementsByTagName","contentWindow","postMessage","videoI","pause","swipeLightboxImg","e","when","coord","changedTouches","pageX","pageY","time","Date","getTime","swipeLightboxImgCoord","swipeLightboxImgTime","Math","abs","Component","selector","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","DomSanitizer","ElementRef","Inject","DOCUMENT","ViewChild","static","Input","Output","HostListener","youtubeRegExp","validFileExtensions","validVideoExtensions","SliderCustomImageComponent","fileUrl","fileExtension","type","showVideo","isVideo","alt","url","bypassSecurityTrustResourceUrl","replace","match","videoClickHandler","srcElement","paused","play","NgImageFullscreenViewModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgImageFullscreenViewService {\n    constructor() { }\n\n    isBase64(str) {\n        const base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n        return base64regex.test(str);\n\n    }\n\n    base64FileExtension(str) {\n        return str.substring('data:image/'.length, str.indexOf(';base64'));\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    OnInit,\n    Inject,\n    AfterViewInit,\n    OnDestroy,\n    Input,\n    Output,\n    EventEmitter,\n    ViewEncapsulation,\n    ViewChild,\n    HostListener,\n    ElementRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { NgImageFullscreenViewService } from './ng-image-fullscreen-view.service';\n\nconst youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'ng-image-fullscreen-view',\n    templateUrl: './ng-image-fullscreen-view.html',\n    styleUrls: ['./ng-image-fullscreen-view.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgImageFullscreenViewComponent implements OnInit, AfterViewInit, OnDestroy {\n    YOUTUBE = 'youtube';\n    IMAGE = 'image';\n    VIDEO = 'video';\n    INVALID = 'invalid';\n    totalImages: number = 0;\n    nextImageIndex: number = -1;\n    popupWidth: number = 1200;\n    marginLeft: number = 0;\n    imageFullscreenView: boolean = false;\n    lightboxPrevDisable: boolean = false;\n    lightboxNextDisable: boolean = false;\n    showLoading: boolean = true;\n    effectStyle: string = 'none';\n    speed: number = 1; // default speed in second\n    title: string = '';\n    currentImageIndex: number = 0;\n\n    // for swipe event\n    private swipeLightboxImgCoord?: [number, number];\n    private swipeLightboxImgTime?: number;\n\n    @ViewChild('lightboxDiv', { static: false }) lightboxDiv;\n    @ViewChild('lightboxImageDiv', { static: false }) lightboxImageDiv;\n\n    // @Inputs\n    @Input() images: Array<object> = [];\n    @Input()\n    set imageIndex(index: number) {\n        if (index !== undefined && index > -1 && index < this.images.length) {\n            this.currentImageIndex = index;\n        }\n        this.nextPrevDisable();\n    }\n    @Input()\n    set show(visiableFlag: boolean) {\n        this.imageFullscreenView = visiableFlag;\n        this.elRef.nativeElement.ownerDocument.body.style.overflow = '';\n        if (visiableFlag === true) {\n            this.elRef.nativeElement.ownerDocument.body.style.overflow = 'hidden';\n            // this.getImageData();\n            this.setPopupSliderWidth();\n        }\n    }\n    @Input() videoAutoPlay: boolean = false;\n    @Input() direction: string = 'ltr';\n    @Input() paginationShow: boolean = false;\n    @Input()\n    set animationSpeed(data: number) {\n        if (data\n            && typeof (data) === 'number'\n            && data >= 0.1\n            && data <= 5) {\n            this.speed = data;\n        }\n    }\n    @Input() infinite: boolean = false;\n    @Input() arrowKeyMove: boolean = true;\n    @Input() showVideoControls: boolean = true;\n\n    // @Output\n    @Output() close = new EventEmitter<any>();\n    @Output() prevImage = new EventEmitter<any>();\n    @Output() nextImage = new EventEmitter<any>();\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.effectStyle = 'none';\n        this.setPopupSliderWidth();\n    }\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        if (event && event.key && this.arrowKeyMove) {\n            if (event.key.toLowerCase() === 'arrowright') {\n                this.nextImageLightbox();\n            }\n\n            if (event.key.toLowerCase() === 'arrowleft') {\n                this.prevImageLightbox();\n            }\n\n            if (event.key.toLowerCase() === 'escape') {\n                this.closeLightbox();\n            }\n        }\n    }\n\n    constructor(\n        private cdRef: ChangeDetectorRef,\n        private sanitizer: DomSanitizer,\n        private elRef: ElementRef,\n        public imageFullscreenViewService: NgImageFullscreenViewService,\n        @Inject(DOCUMENT) private document: any) { }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngOnDestroy() {\n        this.resetState();\n    }\n\n    setPopupSliderWidth() {\n        if (window && window.innerWidth) {\n            this.popupWidth = window.innerWidth;\n            this.totalImages = this.images.length;\n            if (typeof (this.currentImageIndex) === 'number' && this.currentImageIndex !== undefined) {\n                this.marginLeft = -1 * this.popupWidth * this.currentImageIndex;\n                this.getImageData();\n                this.nextPrevDisable();\n                setTimeout(() => {\n                    this.showLoading = false;\n                }, 500);\n            }\n        }\n    }\n\n    closeLightbox() {\n        this.close.emit();\n    }\n\n    prevImageLightbox() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        if (this.currentImageIndex > 0 && !this.lightboxPrevDisable) {\n            this.currentImageIndex--;\n            this.prevImage.emit();\n            this.marginLeft = -1 * this.popupWidth * this.currentImageIndex;\n            this.getImageData();\n            this.nextPrevDisable();\n        }\n    }\n\n    nextImageLightbox() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        if (this.currentImageIndex < this.images.length - 1 && !this.lightboxNextDisable) {\n            this.currentImageIndex++;\n            this.nextImage.emit();\n            this.marginLeft = -1 * this.popupWidth * this.currentImageIndex;\n            this.getImageData();\n            this.nextPrevDisable();\n        }\n    }\n\n    nextPrevDisable() {\n        this.lightboxNextDisable = true;\n        this.lightboxPrevDisable = true;\n        setTimeout(() => {\n            this.applyButtonDisableCondition();\n        }, this.speed * 1000);\n    }\n\n    applyButtonDisableCondition() {\n        this.lightboxNextDisable = false;\n        this.lightboxPrevDisable = false;\n        if (!this.infinite && this.currentImageIndex >= this.images.length - 1) {\n            this.lightboxNextDisable = true;\n        }\n        if (!this.infinite && this.currentImageIndex <= 0) {\n            this.lightboxPrevDisable = true;\n        }\n    }\n\n    getImageData() {\n        if (this.images\n            && this.images.length\n            && typeof (this.currentImageIndex) === 'number'\n            && this.currentImageIndex !== undefined\n            && this.images[this.currentImageIndex]\n            && (this.images[this.currentImageIndex]['image'] || this.images[this.currentImageIndex]['video'])) {\n            this.title = this.images[this.currentImageIndex]['title'] || '';\n            this.totalImages = this.images.length;\n            for (const iframeI in this.document.getElementsByTagName('iframe')) {\n                if (this.document.getElementsByTagName('iframe')[iframeI]\n                    && this.document.getElementsByTagName('iframe')[iframeI].contentWindow) {\n                    this.document.getElementsByTagName('iframe')[iframeI].contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n                }\n            }\n            for (const videoI in this.document.getElementsByTagName('video')) {\n                if (this.document.getElementsByTagName('video')[videoI] && this.document.getElementsByTagName('video')[videoI].pause) {\n                    this.document.getElementsByTagName('video')[videoI].pause();\n                }\n            }\n        }\n    }\n\n    resetState() {\n        this.images = [];\n    }\n\n    /**\n     * Swipe event handler\n     * Reference from https://stackoverflow.com/a/44511007/2067646\n     */\n    swipeLightboxImg(e: TouchEvent, when: string): void {\n        const coord: [number, number] = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        const time = new Date().getTime();\n\n        if (when === 'start') {\n            this.swipeLightboxImgCoord = coord;\n            this.swipeLightboxImgTime = time;\n        } else if (when === 'end') {\n            const direction = [coord[0] - this.swipeLightboxImgCoord[0], coord[1] - this.swipeLightboxImgCoord[1]];\n            const duration = time - this.swipeLightboxImgTime;\n\n            if (duration < 1000 //\n                && Math.abs(direction[0]) > 30 // Long enough\n                && Math.abs(direction[0]) > Math.abs(direction[1] * 3)) { // Horizontal enough\n                if (direction[0] < 0) {\n                    this.nextImageLightbox();\n                } else {\n                    this.prevImageLightbox();\n                }\n            }\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    Input\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { NgImageFullscreenViewService } from '../ng-image-fullscreen-view.service';\n\nconst youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'custom-img',\n    templateUrl: './slider-custom-image.component.html'\n})\nexport class SliderCustomImageComponent {\n    YOUTUBE = 'youtube';\n    IMAGE = 'image';\n    VIDEO = 'video';\n    fileUrl: SafeResourceUrl = '';\n    fileExtension = '';\n    type = this.IMAGE;\n\n    // @inputs\n    @Input() showVideo: boolean = false;\n    @Input() videoAutoPlay: boolean = false;\n    @Input() showVideoControls: number = 1;\n    @Input()\n    set imageUrl(url) {\n        if (url && typeof (url) === 'string') {\n            this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n            this.fileExtension = url.replace(/^.*\\./, '');\n            if (this.imageFullscreenViewService.base64FileExtension(url)\n            && (validFileExtensions.indexOf(this.imageFullscreenViewService.base64FileExtension(url).toLowerCase()) > -1 \n            || validVideoExtensions.indexOf(this.imageFullscreenViewService.base64FileExtension(url).toLowerCase()) > -1)) {\n                this.fileExtension = this.imageFullscreenViewService.base64FileExtension(url);\n            }\n            // verify for youtube url\n            const match = url.match(youtubeRegExp);\n            if (match && match[2].length === 11) {\n                if (this.showVideo) {\n                    this.type = this.YOUTUBE;\n                    this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`${'//www.youtube.com/embed/'}${match[2]}${this.videoAutoPlay ? '?autoplay=1&enablejsapi=1' : '?autoplay=0&enablejsapi=1'}${'&controls='}${this.showVideoControls}`);\n                } else {\n                    this.type = this.IMAGE;\n                    this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`https://img.youtube.com/vi/${match[2]}/0.jpg`);\n                }\n            } else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.IMAGE;\n            } else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.VIDEO;\n            }\n        }\n    }\n    @Input() isVideo = false;\n    @Input() alt: String = '';\n    @Input() title: String = '';\n    @Input() direction: string = 'ltr';\n\n    constructor(public imageFullscreenViewService: NgImageFullscreenViewService, private sanitizer: DomSanitizer) {\n    }\n\n    videoClickHandler(event) {\n        if (event && event.srcElement && !this.showVideoControls) {\n            if (event.srcElement.paused) {\n                event.srcElement.play();\n            } else {\n                event.srcElement.pause();\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SliderCustomImageComponent } from './slider-custom-image/slider-custom-image.component';\nimport { NgImageFullscreenViewComponent } from './ng-image-fullscreen-view.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SliderCustomImageComponent,\n        NgImageFullscreenViewComponent\n    ],\n    exports: [\n        NgImageFullscreenViewComponent\n    ]\n})\nexport class NgImageFullscreenViewModule { }\n"]}