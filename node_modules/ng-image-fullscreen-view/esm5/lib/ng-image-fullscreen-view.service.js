/**
 * @fileoverview added by tsickle
 * Generated from: lib/ng-image-fullscreen-view.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var NgImageFullscreenViewService = /** @class */ (function () {
    function NgImageFullscreenViewService() {
    }
    /**
     * @param {?} str
     * @return {?}
     */
    NgImageFullscreenViewService.prototype.isBase64 = /**
     * @param {?} str
     * @return {?}
     */
    function (str) {
        /** @type {?} */
        var base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;
        return base64regex.test(str);
    };
    /**
     * @param {?} str
     * @return {?}
     */
    NgImageFullscreenViewService.prototype.base64FileExtension = /**
     * @param {?} str
     * @return {?}
     */
    function (str) {
        return str.substring('data:image/'.length, str.indexOf(';base64'));
    };
    NgImageFullscreenViewService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NgImageFullscreenViewService.ctorParameters = function () { return []; };
    /** @nocollapse */ NgImageFullscreenViewService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgImageFullscreenViewService_Factory() { return new NgImageFullscreenViewService(); }, token: NgImageFullscreenViewService, providedIn: "root" });
    return NgImageFullscreenViewService;
}());
export { NgImageFullscreenViewService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctaW1hZ2UtZnVsbHNjcmVlbi12aWV3LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1pbWFnZS1mdWxsc2NyZWVuLXZpZXcvIiwic291cmNlcyI6WyJsaWIvbmctaW1hZ2UtZnVsbHNjcmVlbi12aWV3LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUUzQztJQUlJO0lBQWdCLENBQUM7Ozs7O0lBRWpCLCtDQUFROzs7O0lBQVIsVUFBUyxHQUFHOztZQUNGLFdBQVcsR0FBRyxrRUFBa0U7UUFDdEYsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRWpDLENBQUM7Ozs7O0lBRUQsMERBQW1COzs7O0lBQW5CLFVBQW9CLEdBQUc7UUFDbkIsT0FBTyxHQUFHLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7O2dCQWRKLFVBQVUsU0FBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckI7Ozs7O3VDQUpEO0NBaUJDLEFBZkQsSUFlQztTQVpZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ0ltYWdlRnVsbHNjcmVlblZpZXdTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gICAgaXNCYXNlNjQoc3RyKSB7XG4gICAgICAgIGNvbnN0IGJhc2U2NHJlZ2V4ID0gL14oWzAtOWEtekEtWisvXXs0fSkqKChbMC05YS16QS1aKy9dezJ9PT0pfChbMC05YS16QS1aKy9dezN9PSkpPyQvO1xuICAgICAgICByZXR1cm4gYmFzZTY0cmVnZXgudGVzdChzdHIpO1xuXG4gICAgfVxuXG4gICAgYmFzZTY0RmlsZUV4dGVuc2lvbihzdHIpIHtcbiAgICAgICAgcmV0dXJuIHN0ci5zdWJzdHJpbmcoJ2RhdGE6aW1hZ2UvJy5sZW5ndGgsIHN0ci5pbmRleE9mKCc7YmFzZTY0JykpO1xuICAgIH1cbn1cbiJdfQ==